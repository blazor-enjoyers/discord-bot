# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build docker image and deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore
      
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Test
      run: dotnet test --no-build --verbosity normal
      
  build-and-push-docker-image:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
  
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build image
        run: dotnet publish src/DiscordBot/DiscordBot.csproj --os linux --arch x64 /t:PublishContainer -c Release
        
      - name: Tag image
        run: docker tag discord-bot wiknap/discord-bot
        
      - name: Push image
        run: docker push wiknap/discord-bot
        
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image
    steps:
      - name: Update container
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.MIKRUS_HOST }}
          username: ${{ secrets.MIKRUS_LOGIN }}
          password: ${{ secrets.MIKRUS_PASSWORD }}
          port: ${{ secrets.MIKRUS_PORT }}
          script: |
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            docker stop ${{ vars.DOCKER_CONTAINER_NAME }} || true && docker rm ${{ vars.DOCKER_CONTAINER_NAME }} || true
            docker pull wiknap/discord-bot
            docker run --env DOTNET_ENVIRONMENT=Production --env Bot__Nickname=${{ vars.DISCORD_BOT_NICKNAME }} --env Bot__Token=${{ secrets.DISCORD_BOT_TOKEN }} --name ${{ vars.DOCKER_CONTAINER_NAME }} -d wiknap/discord-bot
